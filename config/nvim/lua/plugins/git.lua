return {
  {
    "tpope/vim-fugitive",
    keys = {
      { "<leader>gdd", "<cmd>Gvdiffsplit!<cr>", desc = "Show git diff" },
    },
    cmd = {
      "Git",
      "Gdiffsplit",
      "Gread",
      "Gwrite",
      "Ggrep",
      "GMove",
      "GDelete",
      "GBrowse",
      "GRemove",
      "GRename",
      "Glgrep",
      "Gedit",
      "Gsplit",
      "Gvsplit",
      "Gtabedit",
      "Gdiff",
      "Gblame",
      "Ggrep",
      "Glog",
      "Gedit",
      "Gsplit",
      "Gvsplit",
      "Gtabedit",
      "Gdiff",
      "Gblame",
      "Ggrep",
      "Glog",
      "Gedit",
      "Gsplit",
      "Gvsplit",
      "Gtabedit",
      "Gdiff",
      "Gblame",
      "Ggrep",
      "Glog",
      "Gedit",
      "Gsplit",
      "Gvsplit",
      "Gtabedit",
      "Gdiff",
      "Gblame",
      "Ggrep",
      "Glog",
      "Gedit",
      "Gsplit",
      "Gvsplit",
      "Gtabedit",
      "Gdiff",
      "Gblame",
      "Ggrep",
      "Glog",
      "Gedit",
      "Gsplit",
      "Gvsplit",
      "Gtabedit",
      "Gdiff",
      "Gblame",
      "Ggrep",
      "Glog",
      "Gedit",
      "Gsplit",
      "Gvsplit",
      "Gtabedit",
      "Gdiff",
      "Gblame",
      "Ggrep",
      "Glog",
      "Gedit",
      "Gsplit",
      "Gvsplit",
      "Gtabedit",
      "Gdiff",
      "Gblame",
      "Ggrep",
      "Glog",
      "Gedit",
      "Gsplit",
      "Gvsplit",
      "Gtabedit",
      "Gdiff",
      "Gblame",
    },
  },
  {
    "sindrets/diffview.nvim",
    cmd = { "DiffviewOpen", "DiffviewClose", "DiffviewToggleFiles", "DiffviewFocusFiles" },
    keys = {
      { "<leader>gdo", "<cmd>DiffviewOpen<cr>", desc = "Open Git Diff View" },
      { "<leader>gdc", "<cmd>DiffviewClose<cr>", desc = "Open Git Diff View" },
    },
    config = function(_, opts)
      local actions = require("diffview.actions")

      require("diffview").setup({
        hooks = { -- disable file panel by default
          view_opened = function()
            require("diffview.actions").toggle_files()
          end,
        },
        keymaps = {
          view = {
            {
              "n",
              "<leader>gco",
              actions.conflict_choose("ours"),
              { desc = "Choose the OURS version of a conflict" },
            },
            {
              "n",
              "<leader>gct",
              actions.conflict_choose("theirs"),
              { desc = "Choose the THEIRS version of a conflict" },
            },
            {
              "n",
              "<leader>gcO",
              actions.conflict_choose_all("ours"),
              { desc = "Choose the OURS version of a conflict for the whole file" },
            },
            {
              "n",
              "<leader>gcT",
              actions.conflict_choose_all("theirs"),
              { desc = "Choose the THEIRS version of a conflict for the whole file" },
            },
          },
        },
        view = {
          merge_tool = {
            layout = "diff3_mixed",
          },
        },
      })
    end,
  },
  {
    "TimUntersberger/neogit",
    cmd = "Neogit",
    dependencies = {
      "sindrets/diffview.nvim",
    },
    opts = {
      integrations = { diffview = true },
      disable_commit_confirmation = true,
    },
    keys = {
      { "<leader>gs", "<cmd>Neogit kind=tab<cr>", desc = "Status" },
    },
  },
  {
    "lewis6991/gitsigns.nvim",
    keys = {
      { "<leader>gtb", "<cmd>:Gitsigns toggle_current_line_blame<cr>", desc = "Toggle Line Blame" },
      { "<leader>gts", "<cmd>:Gitsigns toggle_signs<cr>", desc = "Toggle Git Signs" },
      { "<leader>gdh", "<cmd>:Gitsigns preview_hunk_inline<cr>", desc = "Toggle Git Signs" },
    },
    event = "BufReadPre",
    config = true,
  },
}
